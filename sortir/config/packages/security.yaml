security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        in_database:
            entity:
                class: App\Entity\Utilisateur
                property: username
    encoders:
        App\Entity\Utilisateur:
            algorithm: bcrypt

    firewalls:

        main:
            anonymous: true
            lazy: true
            provider: in_database
            form_login:
                login_path: main-login
                check_path: main-login
            logout:
                path: main-logout
                target: main-login





            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/profile/add, roles: [ROLE_ADMIN, ROLE_USER, IS_AUTHENTICATED_ANONYMOUSLY]  }
        - { path: ^/profile/forgotpassword, roles: [ROLE_ADMIN, ROLE_USER, IS_AUTHENTICATED_ANONYMOUSLY] }
        - { path: ^/profile/resetpassword, roles: [ROLE_ADMIN, ROLE_USER, IS_AUTHENTICATED_ANONYMOUSLY] }
        - { path: ^/admin/locations, roles: [ROLE_ADMIN, ROLE_USER] }
        - { path: ^/admin/location/add, roles: [ROLE_ADMIN, ROLE_USER] }
        - { path: ^/admin/site/add, roles: [ROLE_ADMIN, ROLE_USER] }
        - { path: ^/admin/sites, roles: [ROLE_ADMIN, ROLE_USER] }
        - { path: ^/admin, roles: [ROLE_ADMIN] }
        - { path: ^/sortie, roles: [ROLE_ADMIN, ROLE_USER]  }
        - { path: ^profile, roles: [ROLE_ADMIN, ROLE_USER] }
        - { path: ^/login, roles: [ROLE_ADMIN, IS_AUTHENTICATED_ANONYMOUSLY] }
        - { path: ^/, roles: [ROLE_ADMIN, ROLE_USER] }